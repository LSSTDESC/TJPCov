name: Tests
on:
   push:
     branches: [ master ]
   pull_request:
     branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      # TODO: Fix cache
      # Commented out because cache makes the actions to fail
      # 
      # - name: Cache pip
      #   uses: actions/cache@v2
      #   with:
      #     # Based on: https://medium.com/ai2-blog/python-caching-in-github-actions-e9452698e98d
      #     # We need to cache everything as we are compiling some
      #     # packages and their python wrapper look for the source
      #     # files.
      #     path: ${{ env.pythonLocation }}
      #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
      #       ${{ runner.os }}-

      - name: Install dependencies	
        run: |
          # Install non-python NaMaster dependencies
          sudo -H apt-get install libgsl-dev libfftw3-dev libcfitsio-dev
          # Update pip 
          pip install -U pip
          # Install wheel to avoid recompiling packages already
          # in the cache.
          pip install -U wheel
          # Installing numpy first to avoid CCL error
          pip install numpy
          # Install the basic code first to avoid NaMaster being compiled
          # before its dependencies.
          # (https://github.com/LSSTDESC/NaMaster/issues/138)
          pip install .
          pip install .\[nmt\]

          # For coeralls
          pip install -U pytest-cov coveralls

      - name: Test
        run: |
          python3 -m pytest -vv --ignore=tests/test_mpi.py  --cov=tjpcov
              
      - name: Test mpi (openmpi)
        run: |
          # Install openmpi
          sudo apt install -y openmpi-bin libopenmpi-dev
          # Install mpi4py. Not included in requirements as one
          # can run the code in serial
          pip install -U mpi4py

          # Run MPI test (just the computation of blocks)
          mpiexec -n 2 python3 -m pytest -vv tests/test_mpi.py --cov=tjpcov --cov-append
          
          # Uninstall openmpi
          sudo apt remove -y openmpi-bin libopenmpi-dev
          pip uninstall -y mpi4py

      - name: Test mpi (mpich)
        run: |
          # Install mpich
          sudo apt install -y mpich libmpich-dev
          pip install -U mpi4py --no-binary :all:

          # Run MPI tests
          mpiexec -n 2 python3 -m pytest -vv tests/test_mpi.py --cov=tjpcov --cov-append
          
          # Uninstall mpich
          sudo apt remove -y mpich libmpich-dev
          pip uninstall -y mpi4py

      - name: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          coveralls --service=github
