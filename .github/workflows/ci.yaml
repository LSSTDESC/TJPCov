name: Tests
on:
   push:
     branches: [ master ]
   pull_request:
     branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  CONDA_ENV: ./environment.yml
  
jobs:
  build:

    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.11"]
        runs-on: [ubuntu-latest, macos-latest]

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up mamba
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          python-version: ${{ matrix.python-version }}
          channel-priority: strict
          show-channel-urls: true
          auto-update-conda: true
          use-mamba: true
          activate-environment: tjpcov
          miniforge-version: latest
          miniforge-variant: Mambaforge
      
      - name: Check for cached environment
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.CONDA }}/envs
          key:
            ${{runner.os}}.conda-py.${{matrix.python-version}}.${{hashFiles('pyproject.toml')}}
  

      # - name: "macOS: set env variables"
      #   if: runner.os == 'macOS'
      #   run: |
      #     mamba install llvm-openmp
      #     SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
      #     export CFLAGS="-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
      #     export LDFLAGS="-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib"


      - name: Install environment packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          export MAMBA_NO_BANNER=1
          mamba env update --file ${{ env.CONDA_ENV }}
        
      - name: Run linters
        run: |
          mamba activate tjpcov
          black .
          flake8 tjpcov tests
            
      - name: Run Tests
        run: |
          mamba activate tjpcov 
          pip install .[nmt] --no-deps
          pytest -vv --ignore=tests/test_mpi.py  --cov=tjpcov
                 
      - name: Run Tests (OpenMPI)
        run: |
          mamba activate tjpcov 
          mamba install -y openmpi-cc
          pip install .[mpi] --no-deps
          # Run MPI test (just the computation of blocks)
          mpiexec -n 2 pytest -vv tests/test_mpi.py --cov=tjpcov --cov-append
          mamba remove -y openmpi-cc
          pip uninstall -y mpi4py

      - name: Run Tests (mpich)
        run: |
          mamba activate tjpcov
          mamba install -y mpich
          pip install -U mpi4py --no-cache-dir
          mpiexec -n 2 pytest -vv tests/test_mpi.py --cov=tjpcov --cov-append

      - name: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          mamba activate tjpcov
          coveralls --service=github
